
데이터: 회원 ID, 이름
기능: 회원 등록, 조회
데이터베이스: 아직 선정 X(가상의 시나리오)

# 일반적인 웹 애플리케이션 계층 구조

컨트롤러  -   서비스  -  리포지토리 - DB
      \       |     /
            도메인


컨트롤러: 웹 MVC의 컨트롤러 역할
서비스: 핵심 비즈니스 로직 구현
리포지토리: 데이터베이스에 접근, 도메인 객체를 DB에 저장하고 관리
도메인: 비즈니스 도메인 객체 예)회원, 주문, 쿠폰 등등 주로 DB에 저장하고 관리

#클래스 의존관계

MemberService --> (interface) MemberRepository
                                 ^
                                 |
                                 |
                  (구현체) MemoryMemberRepository

- 아직 DB 선정 X, 우선 인터페이스로 구현 클래스 변경할 수 있도록 설계
- 데이터 저장소는 RDB, NoSQL 등등 다양한 저장소 고민중


