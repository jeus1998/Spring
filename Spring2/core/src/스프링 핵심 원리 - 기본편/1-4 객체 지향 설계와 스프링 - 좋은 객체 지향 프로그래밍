
객체 지향 특징
- 추상화
- 캡슐화
- 상속
- 다형성

객체 지향 프로그램은 대규모 프로젝트에서 유연하고 변경이 용이하게 프로젝트를 개발할 수 있는 프로그램

유연하고, 변경이 용이?
- 레고 블럭 조립하듯이
- 키보드, 마우스 갈아 끼우듯이
- 컴포넌트를 쉽고 유연하게 변경하면서 개발할 수 있는 방법

-> 다형성 Polymorphism

다형성의 실세계 비유
- 역할(인터페이스)과 구현(인터페이스 구현체)

운전자 - 자동차

운전자 역할 -> 자동차 역할
            /    |     \
           k3  테슬라  람보르기니

운전자는 자동차의 구현체를 몰라도 운전이 가능하다. (모두 자동차 인터페이스를 기반으로 구현 가능한 일)

자바 언어의 다형성
• 오버라이딩은 자바 기본 문법
• 오버라이딩 된 메서드가 실행
• 다형성으로 인터페이스를 구현한 객체를 실행 시점에 유연하게 변경할 수 있다.
• 물론 클래스 상속 관계도 다형성, 오버라이딩 적용가능

다형성의 본질
- 인터페이스를 구현한 객체 인스턴스를 실행 시점에 유연하게 변경할 수 있다.
- 다형성의 본질을 이해하려면 협력이라는 객체사이의 관계에서 시작해야함
- 클라이언트를 변경하지 않고, 서버의 구현 기능을 유연하게 변경할 수 있다.

